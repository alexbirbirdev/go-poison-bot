package handlers

import (
	"fmt"
	"os"
	"strconv"
	"strings"

	"github.com/alexbirbirdev/go-poison-bot/internal/calc"
	"github.com/alexbirbirdev/go-poison-bot/internal/exchange"
	"github.com/alexbirbirdev/go-poison-bot/internal/reply"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func Price(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	reply.WithTyping(bot, update.Message.Chat.ID)

	input := strings.TrimSpace(update.Message.Text)
	yuanAmount, err := strconv.ParseFloat(input, 64)
	if err != nil {
		reply.SendReply(bot, update.Message.Chat.ID, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ ‚Äî —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ —é–∞–Ω—è—Ö.")
		return
	}
	if yuanAmount <= 0 {
		reply.SendReply(bot, update.Message.Chat.ID, "–¶–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π‚Ä¶ :)")
		return
	}

	rate, err := exchange.GetCNYRate()
	if err != nil {
		reply.ReplyWithError(bot, update.Message.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ —é–∞–Ω—è: "+err.Error())
		return
	}

	rubPrice := calc.YuanToRub(yuanAmount, rate)

	response := fmt.Sprintf("–¶–µ–Ω–∞ –≤ —Ä—É–±–ª—è—Ö: *%.0f ‚ÇΩ*", rubPrice)

	// reply.SendReply(bot, update.Message.Chat.ID, response)
	rep := tgbotapi.NewMessage(update.Message.Chat.ID, response)
	rep.ParseMode = "Markdown"
	bot.Send(rep)

	shareBtn := tgbotapi.NewInlineKeyboardButtonURL("ü§ù –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –±–æ—Ç–æ–º", os.Getenv("BOT_SHARE_URL"))
	keyboard := tgbotapi.NewInlineKeyboardMarkup(tgbotapi.NewInlineKeyboardRow(shareBtn))
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü–æ–¥–µ–ª–∏—Å—å –±–æ—Ç–æ–º —Å –¥—Ä—É–≥–æ–º! –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—à–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ :)")
	msg.ReplyMarkup = keyboard
	bot.Send(msg)
}
